From 05bf90c68943142c4bc71478ff3afdbe3c9cbbdd Mon Sep 17 00:00:00 2001
From: Garrett Brown <themagnificentmrb@gmail.com>
Date: Mon, 10 Jun 2024 02:25:59 -0700
Subject: [PATCH 3/3] [temp] Force door dimensions

---
 xbmc/application/Application.cpp            | 25 ++-------------------
 xbmc/windowing/wayland/WinSystemWayland.cpp |  2 +-
 2 files changed, 3 insertions(+), 24 deletions(-)

diff --git a/xbmc/application/Application.cpp b/xbmc/application/Application.cpp
index d2535971cd..d866fc6568 100644
--- a/xbmc/application/Application.cpp
+++ b/xbmc/application/Application.cpp
@@ -514,35 +514,14 @@ bool CApplication::CreateGUI()
 
   // Retrieve the matching resolution based on GUI settings
   bool sav_res = false;
-  CDisplaySettings::GetInstance().SetCurrentResolution(CDisplaySettings::GetInstance().GetDisplayResolution());
+  CDisplaySettings::GetInstance().SetCurrentResolution(RES_WINDOW);
   CLog::Log(LOGINFO, "Checking resolution {}",
             CDisplaySettings::GetInstance().GetCurrentResolution());
-  if (!CServiceBroker::GetWinSystem()->GetGfxContext().IsValidResolution(CDisplaySettings::GetInstance().GetCurrentResolution()))
-  {
-    CLog::Log(LOGINFO, "Setting safe mode {}", RES_DESKTOP);
-    // defer saving resolution after window was created
-    CDisplaySettings::GetInstance().SetCurrentResolution(RES_DESKTOP);
-    sav_res = true;
-  }
 
   // update the window resolution
   const std::shared_ptr<CSettings> settings = CServiceBroker::GetSettingsComponent()->GetSettings();
-  CServiceBroker::GetWinSystem()->SetWindowResolution(settings->GetInt(CSettings::SETTING_WINDOW_WIDTH), settings->GetInt(CSettings::SETTING_WINDOW_HEIGHT));
+  CServiceBroker::GetWinSystem()->SetWindowResolution(1440 + 1920, 2560);
 
-  if (CServiceBroker::GetSettingsComponent()->GetAdvancedSettings()->m_startFullScreen && CDisplaySettings::GetInstance().GetCurrentResolution() == RES_WINDOW)
-  {
-    // defer saving resolution after window was created
-    CDisplaySettings::GetInstance().SetCurrentResolution(RES_DESKTOP);
-    sav_res = true;
-  }
-
-  if (!CServiceBroker::GetWinSystem()->GetGfxContext().IsValidResolution(CDisplaySettings::GetInstance().GetCurrentResolution()))
-  {
-    // Oh uh - doesn't look good for starting in their wanted screenmode
-    CLog::Log(LOGERROR, "The screen resolution requested is not valid, resetting to a valid mode");
-    CDisplaySettings::GetInstance().SetCurrentResolution(RES_DESKTOP);
-    sav_res = true;
-  }
   if (!InitWindow())
   {
     return false;
diff --git a/xbmc/windowing/wayland/WinSystemWayland.cpp b/xbmc/windowing/wayland/WinSystemWayland.cpp
index ce0d4d4700..195362bc39 100644
--- a/xbmc/windowing/wayland/WinSystemWayland.cpp
+++ b/xbmc/windowing/wayland/WinSystemWayland.cpp
@@ -731,7 +731,7 @@ void CWinSystemWayland::ProcessMessages()
     }
   }
 
-  if (lastConfigureMessage)
+  if (lastConfigureMessage && CDisplaySettings::GetInstance().GetCurrentResolution() != RES_WINDOW)
   {
     if (skippedConfigures > 0)
     {
-- 
2.43.0

