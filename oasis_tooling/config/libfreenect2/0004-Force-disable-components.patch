From 2342f7fe7f2e7d498d86d5230ffbdcc5534a6119 Mon Sep 17 00:00:00 2001
From: Garrett Brown <eigendebugger@gmail.com>
Date: Thu, 1 Jul 2021 00:03:15 -0700
Subject: [PATCH 4/4] Force-disable components

---
 CMakeLists.txt | 156 -------------------------------------------------
 1 file changed, 156 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 2ee6542..ba25da5 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -194,49 +194,8 @@ IF(APPLE)
 ENDIF(APPLE)
 
 SET(HAVE_VAAPI disabled)
-IF(ENABLE_VAAPI)
-  IF(PKG_CONFIG_FOUND)
-    PKG_CHECK_MODULES(VAAPI libva libva-drm)
-  ENDIF()
-  FIND_PACKAGE(JPEG)
-
-  SET(HAVE_VAAPI no)
-  IF(VAAPI_FOUND AND JPEG_FOUND)
-    SET(LIBFREENECT2_WITH_VAAPI_SUPPORT 1)
-    SET(HAVE_VAAPI yes)
-
-    INCLUDE_DIRECTORIES(${VAAPI_INCLUDE_DIRS})
-
-    LIST(APPEND SOURCES
-      src/vaapi_rgb_packet_processor.cpp
-    )
-    LIST(APPEND LIBRARIES
-      ${VAAPI_LIBRARIES}
-      ${JPEG_LIBRARY}
-    )
-  ENDIF()
-ENDIF(ENABLE_VAAPI)
 
 SET(HAVE_TegraJPEG disabled)
-IF(ENABLE_TEGRAJPEG)
-  FIND_PACKAGE(TegraJPEG)
-
-  SET(HAVE_TegraJPEG no)
-  IF(TegraJPEG_FOUND)
-    SET(LIBFREENECT2_WITH_TEGRAJPEG_SUPPORT 1)
-    SET(HAVE_TegraJPEG yes)
-
-    INCLUDE_DIRECTORIES(${TegraJPEG_INCLUDE_DIRS})
-
-    LIST(APPEND SOURCES
-      src/tegra_jpeg_rgb_packet_processor.cpp
-    )
-
-    LIST(APPEND LIBRARIES
-      ${CMAKE_DL_LIBS}
-    )
-  ENDIF()
-ENDIF()
 
 IF(LIBFREENECT2_WITH_VT_SUPPORT)
   FIND_PACKAGE(TurboJPEG)
@@ -266,125 +225,10 @@ IF(TurboJPEG_FOUND)
 ENDIF()
 
 SET(HAVE_OpenGL disabled)
-IF(ENABLE_OPENGL)
-  FIND_PACKAGE(GLFW3)
-  FIND_PACKAGE(OpenGL)
-  SET(HAVE_OpenGL no)
-  IF(GLFW3_FOUND AND OPENGL_FOUND)
-    SET(LIBFREENECT2_WITH_OPENGL_SUPPORT 1)
-    SET(HAVE_OpenGL yes)
-
-    INCLUDE_DIRECTORIES(${GLFW3_INCLUDE_DIRS})
-
-    LIST(APPEND LIBFREENECT2_DLLS ${GLFW3_DLL})
-    LIST(APPEND LIBRARIES
-      ${GLFW3_LIBRARIES}
-      ${OPENGL_gl_LIBRARY}
-    )
-    LIST(APPEND SOURCES
-      src/flextGL.cpp
-      src/opengl_depth_packet_processor.cpp
-    )
-
-    LIST(APPEND RESOURCES
-      src/shader/debug.fs
-      src/shader/default.vs
-      src/shader/filter1.fs
-      src/shader/filter2.fs
-      src/shader/stage1.fs
-      src/shader/stage2.fs
-    )
-  ENDIF()
-ENDIF(ENABLE_OPENGL)
 
 SET(HAVE_OpenCL disabled)
-IF(ENABLE_OPENCL)
-  FIND_PACKAGE(OpenCL)
-
-  SET(HAVE_OpenCL no)
-  IF(OpenCL_FOUND)
-    SET(LIBFREENECT2_WITH_OPENCL_SUPPORT 1)
-    SET(HAVE_OpenCL yes)
-
-    IF(UNIX AND NOT APPLE)
-      INCLUDE(CheckOpenCLICDLoader)
-      IF(OpenCL_C_WORKS AND NOT OpenCL_CXX_WORKS)
-        SET(LIBFREENECT2_OPENCL_ICD_LOADER_IS_OLD 1)
-        SET(HAVE_OpenCL "yes but buggy")
-        MESSAGE(WARNING "Your libOpenCL.so is incompatible with CL/cl.h. Install ocl-icd-opencl-dev to update libOpenCL.so?")
-      ENDIF()
-    ENDIF()
-    INCLUDE_DIRECTORIES(${OpenCL_INCLUDE_DIRS})
-
-    LIST(APPEND SOURCES
-      src/opencl_depth_packet_processor.cpp
-      src/opencl_kde_depth_packet_processor.cpp
-    )
-
-    LIST(APPEND LIBRARIES
-      ${OpenCL_LIBRARIES}
-    )
-
-    LIST(APPEND RESOURCES
-      src/opencl_depth_packet_processor.cl
-      src/opencl_kde_depth_packet_processor.cl
-    )
-
-    # Major Linux distro stable releases have buggy OpenCL ICD loader.
-    # The workaround of disabling exceptions can only be set up during compile time.
-    # Diabling it for all should be harmless. The flag is the same for GCC/Clang/ICC.
-    IF(UNIX AND NOT APPLE)
-      SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fno-exceptions")
-    ENDIF()
-  ENDIF(OpenCL_FOUND)
-ENDIF(ENABLE_OPENCL)
 
 SET(HAVE_CUDA disabled)
-IF(ENABLE_CUDA)
-  FIND_PACKAGE(CUDA)
-  SET(HAVE_CUDA no)
-  IF(CUDA_FOUND AND MSVC14 AND CUDA_VERSION VERSION_LESS 8.0)
-    SET(HAVE_CUDA "no (VS2015 not supported)")
-  ELSEIF(CUDA_FOUND)
-    SET(LIBFREENECT2_WITH_CUDA_SUPPORT 1)
-    SET(HAVE_CUDA yes)
-
-    STRING(REPLACE "\\" "/" NVCUDASAMPLES_ROOT "$ENV{NVCUDASAMPLES_ROOT}")
-    STRING(REPLACE "\\" "/" NVCUDASAMPLES8_0_ROOT "$ENV{NVCUDASAMPLES8_0_ROOT}")
-    CUDA_INCLUDE_DIRECTORIES(
-      "${MY_DIR}/include/"
-      "${CUDA_TOOLKIT_ROOT_DIR}/samples/common/inc"
-      "${NVCUDASAMPLES_ROOT}/common/inc"
-      "${NVCUDASAMPLES8_0_ROOT}/common/inc"
-    )
-    SET(CUDA_FLAGS -use_fast_math)
-    IF(NOT MSVC)
-      SET(CUDA_FLAGS "${CUDA_FLAGS} -Xcompiler -fPIC")
-    ENDIF()
-    IF(HAVE_CXX11 STREQUAL yes AND CUDA_VERSION VERSION_GREATER 7.0)
-      SET(CUDA_FLAGS "${CUDA_FLAGS} -std=c++11")
-    ENDIF()
-
-    SET(OLD_CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
-    STRING(REGEX REPLACE "-std=c\\+\\+.." "" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
-    CUDA_COMPILE(CUDA_OBJECTS
-      src/cuda_depth_packet_processor.cu
-      src/cuda_kde_depth_packet_processor.cu
-      OPTIONS ${CUDA_FLAGS}
-    )
-    SET(CMAKE_CXX_FLAGS "${OLD_CMAKE_CXX_FLAGS}")
-
-    INCLUDE_DIRECTORIES(${CUDA_INCLUDE_DIRS})
-
-    LIST(APPEND SOURCES
-      ${CUDA_OBJECTS}
-    )
-
-    LIST(APPEND LIBRARIES
-      ${CUDA_LIBRARIES}
-    )
-  ENDIF()
-ENDIF(ENABLE_CUDA)
 
 # RPATH handling for CUDA 8.0 libOpenCL.so conflict. See #804.
 IF(HAVE_OpenCL STREQUAL yes AND UNIX AND NOT APPLE)
-- 
2.34.1

