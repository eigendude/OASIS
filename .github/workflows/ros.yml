################################################################################
# This workflow will do a clean install of project dependencies, build the
# source code and run tests.
################################################################################

name: OASIS ROS

# Controls when the action will run. Triggers the workflow on push or pull
# request events
on:
  push:
  pull_request:
  schedule:
    # Schedule the workflow to run at midnight on the first day of each month (UTC time)
    - cron: '0 0 1 * *'

# A workflow run is made up of one or more jobs that can run sequentially or in
# parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            ros2_distro: jazzy
          - os: ubuntu-24.04
            ros2_distro: jazzy
          #- os: macbook
          #  ros2_distro: galactic

    # Steps represent a sequence of tasks that will be executed as part of the
    # job
    steps:
      - name: Build environment information
        run: 'echo "Matrix OS: ${{ matrix.os }} on $HOSTNAME with $(getconf _NPROCESSORS_ONLN) cores"'

      # Check-out the repository under $GITHUB_WORKSPACE, so the job can
      # access it
      - name: Checkout main repo
        uses: actions/checkout@v4

      - name: Restore ROS 2 Desktop
        id: restore-ros2-desktop
        uses: actions/cache@v4
        with:
          path: |
            ros-ws/ros2-desktop-${{ matrix.ros2_distro }}/install
          key: restore-ros2-desktop-${{ matrix.os }}-${{ matrix.ros2_distro }}-${{ hashFiles('oasis_tooling/scripts/*ros2_desktop.sh') }}

      - name: Restore OASIS dependencies
        id: restore-oasis-depends
        uses: actions/cache@v4
        with:
          path: |
            ros-ws/oasis-depends-${{ matrix.ros2_distro }}/install
          key: restore-oasis-depends-${{ matrix.os }}-${{ matrix.ros2_distro }}-${{ hashFiles('oasis_tooling/scripts/*ros2_desktop.sh') }}-${{ hashFiles('oasis_tooling/config/depends.repos', 'oasis_tooling/config/libcec/**', 'oasis_tooling/config/libfreenect2/**', 'oasis_tooling/config/OpenNI/**', 'oasis_tooling/config/orb-slam3/**', 'oasis_tooling/config/p8-platform/**', 'oasis_tooling/config/pangolin/**', 'oasis_tooling/config/vision_opencv/**', 'oasis_tooling/scripts/*oasis_deps.sh') }}

      - name: Restore Arduino IDE
        id: restore-arduino-ide
        uses: actions/cache@v4
        with:
          path: |
            oasis_avr/arduino-*
          key: restore-arduino-ide-${{ matrix.os }}-${{ hashFiles('oasis_avr/bootstrap.sh') }}

      - name: Install system dependencies
        if: matrix.os != 'starship' && matrix.os != 'cinder' && matrix.os != 'macbook'
        run: |
          sudo apt update
          sudo apt install -y build-essential cmake git

      # TODO: This was needed to build theora_image_transport
      - name: Install python3-lark
        run: |
          sudo apt install -y python3-lark

      - name: Install ORB_SLAM3 dependencies
        run: sudo apt install -y libegl1-mesa-dev

      # TODO: This was needed to link oasis_drivers_cpp
      - name: Install libspdlog-dev
        if: matrix.os != 'ubuntu-18.04'
        run: |
          sudo apt install -y libspdlog-dev

      - name: Install ROS 2 Desktop dependencies
        if: steps.restore-ros2-desktop.outputs.cache-hit != 'true'
        run: ./oasis_tooling/scripts/depinstall_ros2_desktop.sh

      - name: Build ROS 2 Desktop
        if: steps.restore-ros2-desktop.outputs.cache-hit != 'true'
        run: ./oasis_tooling/scripts/build_ros2_desktop.sh

      - name: Install OASIS dependency rosdeps
        if: steps.restore-oasis-depends.outputs.cache-hit != 'true'
        run: ./oasis_tooling/scripts/depinstall_oasis_deps.sh

      - name: Build OASIS dependencies
        if: steps.restore-oasis-depends.outputs.cache-hit != 'true'
        run: ./oasis_tooling/scripts/build_oasis_deps.sh

      - name: Install OASIS rosdeps
        run: ./oasis_tooling/scripts/depinstall_oasis.sh

      - name: colcon build
        run: ./oasis_tooling/scripts/build_oasis.sh

      - name: Install OASIS files
        run: ./oasis_tooling/scripts/install_oasis.sh

      #- name: Upload Ardino hex to /dev/ttyACM0
      #  if: matrix.os == 'cinder'
      #  run: |
      #    ./oasis_avr/scripts/reset_leonardo.py /dev/ttyACM0
      #    sleep 2
      #    source oasis_tooling/scripts/env_ros2_desktop.sh && cmake --build "build/oasis_avr" --target upload -- TARGET=firmata_node SERIAL_PORT=/dev/ttyACM0
      #    sleep 2

      #- name: Test Ardino
      #  if: matrix.os == 'cinder'
      #  run: |
      #    source install/setup.bash && ros2 run oasis_drivers_py firmata_test
