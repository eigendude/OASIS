################################################################################
# This workflow will do a clean install of project dependencies, build the
# source code and run tests.
################################################################################

name: Oasis CI

# Controls when the action will run. Triggers the workflow on push or pull
# request events
on: [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in
# parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-18.04
          - os: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the
    # job
    steps:
      - name: Build environment information
        run: 'echo "Matrix OS: ${{ matrix.os }} on $HOSTNAME with $(getconf _NPROCESSORS_ONLN) cores"'

      # Check-out the repository under $GITHUB_WORKSPACE, so the job can
      # access it
      - name: Checkout main repo
        uses: actions/checkout@v2

      - name: Restore CMake
        id: restore-cmake
        uses: actions/cache@v2
        with:
          path: |
            ros-ws/cmake/install
          key: build-cmake-${{ matrix.os }}-${{ hashFiles('oasis_tooling/scripts/build_cmake.sh') }}

      - name: Restore ROS 2 Desktop
        id: restore-ros2-desktop
        uses: actions/cache@v2
        with:
          path: |
            ros-ws/ros2-desktop-foxy/install
          key: build-ros2-desktop-${{ matrix.os }}-${{ hashFiles('oasis_tooling/scripts/build_ros_desktop.sh') }}

      - name: Restore ROS 2 dependencies
        id: restore-ros2-depends
        uses: actions/cache@v2
        with:
          path: |
            ros-ws/ros2-depends-foxy/install
          key: build-ros2-depends-${{ matrix.os }}-${{ hashFiles('oasis_tooling/scripts/build_ros_deps.sh', 'oasis_tooling/config/depends.repos') }}

      - name: Add ROS 2 repo
        run: |
          curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=$(dpkg --print-architecture)] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" > /etc/apt/sources.list.d/ros2-latest.list'

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential cmake git python3-colcon-common-extensions python3-colcon-ros python3-rosdep python3-vcstool

      - name: Install ROS 2
        if: matrix.os == 'ubuntu-20.04'
        run: |
          sudo apt install -y ros-foxy-ros-base

      - name: Build CMake
        if: steps.restore-cmake.outputs.cache-hit != 'true'
        run: ./oasis_tooling/scripts/build_cmake.sh

      - name: Build ROS 2 Desktop
        if: steps.restore-ros2-desktop.outputs.cache-hit != 'true'
        run: ./oasis_tooling/scripts/build_ros_desktop.sh

      - name: Build ROS 2 Desktop
        if: steps.restore-ros2-desktop.outputs.cache-hit != 'true'
        run: ./oasis_tooling/scripts/build_ros_desktop.sh

      - name: Build dependencies
        if: steps.restore-ros2-depends.outputs.cache-hit != 'true'
        run: ./oasis_tooling/scripts/build_ros_deps.sh

      - name: Install rosdeps
        run: ./oasis_tooling/scripts/run_ci.sh install

      - name: colcon build
        run: ./oasis_tooling/scripts/run_ci.sh build
